using System;
using Molytho.Matrix;
using Xunit;

namespace Molytho.UnitTests.Matrix
{
    public class DoubleCalculationProvider
    {
        [Fact]
        public void TestAdd()
        {
            (Matrix<double>, Matrix<double>, Matrix<double>)[] inputs =
            {
                (
                    new double[,]{{21.640092402168033,20.89541854078569},{32.15931732143375,67.97045988157502}},
                    new double[,]{{92.70631441895581,78.53450157027936},{77.00424994962127,32.12785462811387}},
                    new double[,]{{114.34640682112385, 99.42992011106506}, {109.16356727105502, 100.09831450968889}}
                ),
                (
                    new double[,]{{23.947244845511072,37.18555076764907},{47.99382808486601,61.526461464388596}},
                    new double[,]{{93.62217345115221,2.605961647760957},{23.06255908181264,7.821800686849523}},
                    new double[,]{{117.56941829666329, 39.791512415410025}, {71.05638716667865, 69.34826215123812}}
                ),
                (
                    new double[,]{{61.8167616902057,67.38832178868046},{59.41407030690012,79.96776477599659},{86.37918431908965,59.123534232332844}},
                    new double[,]{{36.192328161345955,21.971069042577916},{91.61844435942712,83.15302972201738},{20.827309130114337,3.410396040915975}},
                    new double[,]{{98.00908985155166, 89.35939083125837}, {151.03251466632724, 163.12079449801396}, {107.20649344920398, 62.53393027324882}}
                ),
                (
                    new double[,]{{5.296571838715658,85.40379712539745,86.11859538909314,53.375822760906225},{82.13268634604506,16.139551115757367,26.682659589012847,60.65791416550449},{86.98427572306852,6.411654587706083,56.600099644189164,1.007034969638665}},
                    new double[,]{{87.86360222412924,94.40265550892248,73.68427914009652,71.95121232494085},{38.101940558037825,82.97168786588807,82.69825459919791,49.08601598582525},{29.044054495101502,32.891257088885105,78.19391959173174,84.94584970222635}},
                    new double[,]{{93.1601740628449, 179.80645263431992, 159.80287452918967, 125.32703508584709}, {120.23462690408289, 99.11123898164544, 109.38091418821075, 109.74393015132974}, {116.02833021817003, 39.30291167659119, 134.7940192359209, 85.95288467186502}}
                ),
                (
                    new double[,]{{6.8637699285498455,6.258436960304092,66.78164970504832,80.97935956733673}},
                    new double[,]{{80.0961618912178,61.795104435575446,29.201559577233592,64.30811750595349}},
                    new double[,]{{86.95993181976765, 68.05354139587953, 95.98320928228192, 145.28747707329023}}
                ),
                (
                    new double[,]{{85.2198633685785,83.31151930339432,80.59848202687495},{90.05694679750901,33.502770364922995,91.03843225088131},{73.34577309657352,92.50147827205059,8.150971419805009}},
                    new double[,]{{57.50664669920202,31.614286908198608,98.75450238128612},{17.340091275898274,37.014475908089125,74.91844100863678},{8.547868635833966,39.83738949884986,15.931915700498433}},
                    new double[,]{{142.7265100677805, 114.92580621159293, 179.35298440816106}, {107.39703807340729, 70.51724627301212, 165.9568732595181}, {81.89364173240749, 132.33886777090044, 24.08288712030344}}
                ),
            };

            for (int i = 0; i < inputs.Length; i++)
                Assert.Equal(inputs[i].Item3,  inputs[i].Item2 + inputs[i].Item1);
        }

        [Fact]
        public void TestSubstract()
        {
            (Matrix<double>, Matrix<double>, Matrix<double>)[] inputs =
            {
                (
                    new double[,]{{1012374,1037197},{1050599,1112890}},
                    new double[,]{{1236093,72540},{845062,51057}},
                    new double[,]{{-223719, 964657}, {205537, 1061833}}
                ),
                (
                    new double[,]{{131305,1052834},{805299,669307}},
                    new double[,]{{842151,1593357},{1855646,1953061}},
                    new double[,]{{-710846, -540523}, {-1050347, -1283754}}
                ),
                (
                    new double[,]{{1973460,235416},{1873653,1312046},{1092682,758346}},
                    new double[,]{{1840525,1498344},{1426583,1545091},{1260516,1989954}},
                    new double[,]{{132935, -1262928}, {447070, -233045}, {-167834, -1231608}}
                ),
                (
                    new double[,]{{1090924,151525,1385267,1905711},{1720299,1919949,606945,986322},{1857376,1683467,1749295,685363}},
                    new double[,]{{1462523,125142,1989364,1727489},{1260039,22140,124655,972345},{1113811,1403809,160162,1896816}},
                    new double[,]{{-371599, 26383, -604097, 178222}, {460260, 1897809, 482290, 13977}, {743565, 279658, 1589133, -1211453}}
                ),
                (
                    new double[,]{{1841561,825681,528558,673743}},
                    new double[,]{{1259720,1368474,63463,477415}},
                    new double[,]{{581841, -542793, 465095, 196328}}
                ),
                (
                    new double[,]{{1690320,1229662,1243656},{811996,1833176,826311},{885842,1886789,848343}},
                    new double[,]{{655256,1064783,1188089},{1397484,1125799,1610467},{953822,1901463,721735}},
                    new double[,]{{1035064, 164879, 55567}, {-585488, 707377, -784156}, {-67980, -14674, 126608}}
                ),
            };

            for (int i = 0; i < inputs.Length; i++)
                Assert.Equal(inputs[i].Item3,  inputs[i].Item1 - inputs[i].Item2);
        }

        [Fact]
        public void TestMultiply()
        {
            (Matrix<double>, Matrix<double>, Matrix<double>)[] inputs1 =
            {
                (
                    new double[,]{{5909,6344,6621},{4122,3346,8485}},
                    new double[,]{{442,8726,9136,9441},{5746,5926,9679,8057},{3968,9453,7127,5437}},
                    new double[,]{{65336530, 151744791, 162576067, 142898854}, {54716520, 136005673, 130517121, 112007469}}
                ),
                (
                    new double[,]{{4404},{9577},{7956},{6386},{6270}},
                    new double[,]{{81,6684,8545,5082,5104,4421,7253,1382,2401,6054}},
                    new double[,]{{356724, 29436336, 37632180, 22381128, 22478016, 19470084, 31942212, 6086328, 10574004, 26661816}, {775737, 64012668, 81835465, 48670314, 48881008, 42339917, 69461981, 13235414, 22994377, 57979158}, {644436, 53177904, 67984020, 40432392, 40607424, 35173476, 57704868, 10995192, 19102356, 48165624}, {517266, 42684024, 54568370, 32453652, 32594144, 28232506, 46317658, 8825452, 15332786, 38660844}, {507870, 41908680, 53577150, 31864140, 32002080, 27719670, 45476310, 8665140, 15054270, 37958580}}
                ),
                (
                    new double[,]{{6458,200,328},{4816,9768,9058},{934,6617,6677}},
                    new double[,]{{2844,1785,2069},{9892,5651,8163},{8272,6779,5812}},
                    new double[,]{{23058168, 14881242, 16900538}, {185249536, 125199710, 142345584}, {123343804, 84323240, 94753741}}
                ),
                (
                    new double[,]{{3805}},
                    new double[,]{{8739,7630,798,6524,3029,3240,888}},
                    new double[,]{{33251895, 29032150, 3036390, 24823820, 11525345, 12328200, 3378840}}
                ),
                (
                    new double[,]{{1644,4009,1222,5873,8771,2281,421,2277,3306,3399,7293,9006,3224},{7739,8665,9438,6369,1897,8085,7444,262,9398,7831,9026,1423,6673},{4100,8541,7276,1686,5204,8579,8215,9932,7223,6575,4859,6811,6464}},
                    new double[,]{{4322,5500},{9369,3022},{8886,2124},{2803,3835},{1809,6061},{3297,9952},{1870,5481},{9390,2802},{7707,1332},{3994,1937},{4587,4583},{7324,1476},{5637,4693}},
                    new double[,]{{274183467, 203659241}, {455964511, 349185560}, {503981528, 345070663}}
                ),
                (
                    new double[,]{{5988,5627,4259,7683,2185},{4968,1434,9356,8236,734},{8015,4211,8403,5957,3818},{253,227,2388,1859,956},{5831,2453,4670,6163,6422},{4531,8505,3058,737,6779},{6416,8688,9570,6950,9118},{8645,2466,9251,5025,593},{1328,8582,974,5644,6439},{7762,8905,6827,1934,7897},{3343,4948,7216,6034,9764},{2344,6628,7283,2647,8802},{724,4515,2573,4949,10}},
                    new double[,]{{3933,4528,1750,4084,7567,8433,6029,6375,4502},{7297,6449,2402,3648,7016,3218,3112,4289,3995},{5747,2929,3130,5443,7889,885,162,1856,3680},{1955,6141,1296,8867,467,4041,6628,4149,42},{4597,1632,1607,9054,7539,7338,7676,588,5159}},
                    new double[,]{{114152206, 126624021, 50794187, 156072176, 138450155, 119454238, 121997818, 103373954, 76706062}, {103247552, 110921858, 53276142, 156119500, 130843122, 93457584, 96152744, 89788918, 66657464}, {139739984, 130873959, 64298260, 181221408, 188050969, 140666869, 131578317, 111713149, 103776771}, {24404381, 22580270, 12408000, 39998609, 30421452, 19504762, 22278325, 15293725, 15843793}, {109241953, 104228282, 49020858, 170973267, 149468634, 133228846, 133689011, 85707485, 86626441}, {130059632, 99911240, 49778805, 134087583, 169532779, 121007862, 111200795, 78082583, 100633292}, {199131950, 170671616, 85710502, 254166300, 256988862, 185526396, 183323828, 130123686, 146142654}, {117710580, 113970274, 57473063, 144581038, 162516612, 113683467, 99151127, 104055814, 86085477}, {114077559, 109379600, 43648681, 150376224, 129123543, 109734676, 121705680, 74285030, 77303915}, {174825979, 137335562, 71538763, 189993025, 235509398, 165918611, 149051356, 113014809, 136465210}, {147405505, 121172062, 63832238, 212886538, 193367347, 146531969, 151663931, 86702791, 111998230}, {145076548, 105309602, 60393572, 176557466, 189289110, 122826914, 121046626, 73045719, 109353680}, {60301743, 70339953, 26595494, 77405698, 59840718, 42984156, 51711234, 49295104, 31024961}}
                )
            };
            for (int i = 0; i < inputs1.Length; i++)
                Assert.Equal(inputs1[i].Item3, inputs1[i].Item1 * inputs1[i].Item2);

            (Matrix<double>, double, Matrix<double>)[] input2 =
            {
                (
                    new double[,]{{553,4658,3201,8491,6715,4279},{9996,3733,7144,5266,6622,3716},{2211,1266,508,3062,595,8133},{8146,2853,5360,2610,1489,9662},{5633,7589,9894,4103,3522,3318},{7678,5847,7260,1338,2572,7161},{2034,5231,4486,5981,1229,3135},{9107,7018,1546,9637,3876,588}},
                    9,
                    new double[,]{{4977, 41922, 28809, 76419, 60435, 38511}, {89964, 33597, 64296, 47394, 59598, 33444}, {19899, 11394, 4572, 27558, 5355, 73197}, {73314, 25677, 48240, 23490, 13401, 86958}, {50697, 68301, 89046, 36927, 31698, 29862}, {69102, 52623, 65340, 12042, 23148, 64449}, {18306, 47079, 40374, 53829, 11061, 28215}, {81963, 63162, 13914, 86733, 34884, 5292}}
                ),
                (
                    new double[,]{{3119,2113,8344,6898},{8932,1805,5696,8132},{6223,7911,7789,9284},{1496,7288,7319,4534}},
                    3814,
                    new double[,]{{11895866, 8058982, 31824016, 26308972}, {34066648, 6884270, 21724544, 31015448}, {23734522, 30172554, 29707246, 35409176}, {5705744, 27796432, 27914666, 17292676}}
                ),
                (
                    new double[,]{{9164,3138,9588},{139,6508,3538}},
                    9260,
                    new double[,]{{84858640, 29057880, 88784880}, {1287140, 60264080, 32761880}}
                ),
                (
                    new double[,]{{6571}},
                    9073,
                    new double[,]{{59618683}}
                ),
                (
                    new double[,]{{7155,3289,321,8537,6583,5953,5718,674}},
                    1940,
                    new double[,]{{13880700, 6380660, 622740, 16561780, 12771020, 11548820, 11092920, 1307560}}
                ),
            };
            for (int i = 0; i < input2.Length; i++)
                Assert.Equal(input2[i].Item3, input2[i].Item1 * input2[i].Item2);
        }

        [Fact]
        public void TestTranspose()
        {
            (Matrix<double>, Matrix<double>)[] input =
            {
                (
                    new double[,]{{3615,6639,2699,5166},{6136,1130,4616,9260},{1031,2888,5378,4027}},
                    new double[,]{{3615, 6136, 1031}, {6639, 1130, 2888}, {2699, 4616, 5378}, {5166, 9260, 4027}}
                ),
                (
                    new double[,]{{2319,5391},{2870,945}},
                    new double[,]{{2319, 2870}, {5391, 945}}
                ),
                (
                    new double[,]{{6116,1325,7043,9594,2769},{909,46,8171,5391,5866}},
                    new double[,]{{6116, 909}, {1325, 46}, {7043, 8171}, {9594, 5391}, {2769, 5866}}
                ),
                (
                    new double[,]{{3326,5024,2790,9493,3284,5886,4994,5991}},
                    new double[,]{{3326}, {5024}, {2790}, {9493}, {3284}, {5886}, {4994}, {5991}}
                ),
                (
                    new double[,]{{5138,9097,8662,9418},{2613,6023,3162,1537},{9956,8522,2710,2083},{110,6879,6029,7767},{8726,6176,4835,3156}},
                    new double[,]{{5138, 2613, 9956, 110, 8726}, {9097, 6023, 8522, 6879, 6176}, {8662, 3162, 2710, 6029, 4835}, {9418, 1537, 2083, 7767, 3156}}
                ),
            };
            for(int i = 0; i < input.Length; i++)
                Assert.Equal(input[i].Item2, input[i].Item1.Transpose);
        }
    }
}